services:
  # Frontend - ComfyUI Controller
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: comfyui-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - DISPATCHER_URL=http://dispatcher:8187
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-key}
      - AUTH_PASSWORD=${AUTH_PASSWORD:-comfyui123}
    depends_on:
      - dispatcher
    restart: unless-stopped
    networks:
      - comfyui-network

  # Instance Manager - Supports both GCE and Runpod
  dispatcher:
    image: python:3.10-slim
    container_name: comfyui-dispatcher
    ports:
      - "${DISPATCHER_PORT:-8187}:8187"
    volumes:
      - ./job-dispatcher:/app
    working_dir: /app
    environment:
      # Mode selection
      - DISPATCHER_MODE=${DISPATCHER_MODE:-runpod}
      
      # Runpod configuration
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
      - RUNPOD_POD_ID=${RUNPOD_POD_ID}
      - RUNPOD_TEMPLATE_ID=${RUNPOD_TEMPLATE_ID}
      - RUNPOD_GPU_TYPE=${RUNPOD_GPU_TYPE:-NVIDIA L40S}
      - RUNPOD_DISK_SIZE=${RUNPOD_DISK_SIZE:-100}
      - RUNPOD_VOLUME_ID=${RUNPOD_VOLUME_ID}
      
      # GCE configuration (legacy)
      - GCP_PROJECT=${GCP_PROJECT}
      - GCE_INSTANCE=${GCE_INSTANCE:-comfyui-gpu}
      - GCE_ZONE=${GCE_ZONE:-us-central1-a}
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/sa-key.json
      - STARTUP_SCRIPT_URL=${STARTUP_SCRIPT_URL}
      - ALLOWED_IP=${ALLOWED_IP}
      - COMFYUI_AUTH_USER=${COMFYUI_AUTH_USER:-admin}
      - COMFYUI_AUTH_PASS=${COMFYUI_AUTH_PASS:-comfyui123}
      
      # Shared configuration
      - COMFYUI_DOMAIN=${COMFYUI_DOMAIN}
      - SSL_EMAIL=${SSL_EMAIL}
      - CF_CERT_PATH=${CF_CERT_PATH}
      - CF_KEY_PATH=${CF_KEY_PATH}
    command: |
      sh -c "
        if [ \"$${DISPATCHER_MODE}\" = \"runpod\" ]; then
          echo 'Starting Runpod manager...'
          pip install -r requirements-runpod.txt && python runpod_manager.py
        else
          echo 'Starting GCE manager...'
          pip install -r requirements.txt && python instance_manager.py
        fi
      "
    restart: unless-stopped
    networks:
      - comfyui-network

networks:
  comfyui-network:
    driver: bridge